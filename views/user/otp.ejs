<%- include("../../views/partials/user/header.ejs") %>


  <style>
    body {
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-color: #f8f9fa;
    }

    .otp-input {
      width: 150px;
      height: 50px;
      text-align: center;
      font-size: 18px;
      margin: 0 5px;
    }

    .resend-link {
      cursor: pointer;
      color: #007bff;
      text-decoration: none;
    }

    .resend-link.disabled {
      pointer-events: none;
      color: #6c757d;
    }
  </style>
</head>
<body>
  <div class="container my-5" style="width: 40rem;">
    <div class="card shadow-sm p-4" style="align-items: center;">
      <h3 class="text-center mb-4">OTP Verification</h3>
      <p class="text-muted text-center mb-4">Enter the 6-digit OTP sent to your E-Mail</p>
      <form id="otpForm" class="d-flex justify-content-center" action="/verify-otp" method="post" onsubmit="return validateOTPForm()">
        <input type="text" maxlength="6" class="form-control otp-input" id="otp-input" required />
        <!-- <input type="text" maxlength="1" class="form-control otp-input" required />
        <input type="text" maxlength="1" class="form-control otp-input" required />
        <input type="text" maxlength="1" class="form-control otp-input" required />
        <input type="text" maxlength="1" class="form-control otp-input" required />
        <input type="text" maxlength="1" class="form-control otp-input" required /> -->
      </form>
      <button id="verifyBtn" class="btn btn-primary mt-4" style="width: 8rem;">Verify</button>
      <p class="text-center mt-3">
        Resend OTP in <span id="timer">30</span> seconds
        <a id="resendOtpLink" class="resend-link disabled">Resend OTP</a>
      </p>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <!-- <script>
    const inputOtp = document.querySelectorAll('.otp-input');
    const otpForm = document.getElementById("otpForm");
    const verifyBtn = document.getElementById('verifyBtn');
    const resendOtpLink = document.getElementById('resendOtpLink');
    const timerSpan = document.getElementById('timer');
    let countdown;
    let timer = 60;

    

    

    // Function to start the timer
    function startTimer() {
      resendOtpLink.classList.add('disabled');
      timer = 60;
      timerSpan.textContent = timer;

      countdown = setInterval(() => {
        timer--;
        timerSpan.textContent = timer;
        if (timer === 0) {
          clearInterval(countdown);
          resendOtpLink.classList.remove('disabled');
        }
      }, 1000);
    }

    // Initial Timer Start
    startTimer();

    // Resend OTP Click
    resendOtpLink.addEventListener('click', () => {
      if (!resendOtpLink.classList.contains('disabled')) {
        inputs.forEach(input => {
        input.value = "";
        });
        inputs[0].focus(); 
        alert('OTP Resent Successfully!');
        startTimer();
      }
    });

    // Focus next input on keypress
    inputs.forEach((input, index) => {
      input.addEventListener('input', (e) => {
        if (e.target.value.length === 1 && index < inputs.length - 1) {
          inputs[index + 1].focus();
        }
      });

      // Allow backspace to move to the previous field
      input.addEventListener('keydown', (e) => {
        if (e.key === "Backspace" && index > 0 && e.target.value === "") {
          inputs[index - 1].focus();
        }
      });
    });

    // Verify OTP
    verifyBtn.addEventListener('click', () => {
      const otp = Array.from(inputs).map(input => input.value).join('');
      if (otp.length === inputs.length) {
      } else {
        alert("Please complete the OTP fields.");
      }
    });

    // Resend OTP Click
    resendOtpLink.addEventListener('click', () => {
    if (!resendOtpLink.classList.contains('disabled')) {
        // Clear OTP inputs
        inputs.forEach(input => {
        input.value = "";
        });
        inputs[0].focus(); // Set focus to the first input
        alert('OTP Resent Successfully!');
        startTimer();
    }
    });
    function validateOTPForm() {
      $ajax({
        type:'POST',
        url:'verify-otp',
        data:{otp:inputOtp},
        sucess: function name(response) {
          if(response.sucess){
            Swal.fire({
              icon:'sucess',
              title:'OTP Verfied Successfully',
              showConfirmButton:false,
              timer:1500,
            }).then(()=>{
              window.location.href = response.redirectUrl
            })
          }else{
            Swal.fire({
              icon:'error',
              title:'Error',
              text:response.message
            })
          }
        },
        error: function () {
          Swal.fire({
            icon:'error',
            title:'Invalid OTP',
            text:'Please Try Again'
          })
        }
      })
      return false
    }


   

  </script> -->

  <script>
    const otpInput = document.getElementById('otp-input');
    const verifyBtn = document.getElementById('verifyBtn');
    const resendOtpLink = document.getElementById('resendOtpLink');
    const timerSpan = document.getElementById('timer');
    let countdown;
    let timer = 60;

    // Function to start the timer
    function startTimer() {
        resendOtpLink.classList.add('disabled');
        timer = 60;
        timerSpan.textContent = timer;

        countdown = setInterval(() => {
            timer--;
            timerSpan.textContent = timer;
            if (timer === 0) {
                clearInterval(countdown);
                resendOtpLink.classList.remove('disabled');
            }
        }, 1000);
    }

    // Initial Timer Start
    startTimer();

    // Resend OTP Click
    resendOtpLink.addEventListener('click', () => {
        if (!resendOtpLink.classList.contains('disabled')) {
            otpInput.value = "";
            otpInput.focus();
            alert('OTP Resent Successfully!');
            startTimer();
        }
    });

    // Verify OTP
    verifyBtn.addEventListener('click', (e) => {
    e.preventDefault();
    console.log('otp submitted');
    const otp = otpInput.value.trim();
    console.log('otp',otp)
    if (otp.length === 6) {
        axios.post('/verify-otp', { otp: otp })
            .then(response => {
                if (response.data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Verified Successfully',
                        showConfirmButton: false,
                        timer: 1500,
                    }).then(() => {
                        window.location.href = response.data.redirectUrl;
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.data.message
                    });
                }
            })
            .catch(error => {
                console.error('Error verifying OTP:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid OTP',
                    text: 'Please Try Again'
                });
            });
    } else {
        alert("Please enter a 6-digit OTP.");
    }
});

    
  </script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<%-include("../../views/partials/user/footer.ejs")%>




