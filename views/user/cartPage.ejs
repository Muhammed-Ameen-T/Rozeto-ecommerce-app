<%- include("../../views/partials/user/header.ejs") %>

  <!-- bootstrap core css -->
  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />

  <!--owl slider stylesheet -->
  <link rel="stylesheet" type="text/css"
    href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
  <!-- nice select  -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-nice-select/1.1.0/css/nice-select.min.css"
    integrity="sha512-CruCP+TD3yXzlvvijET8wV5WxxEh5H8P4cmz0RFbKK6FlZ2sYl3AEsKlLPHbniXKSrDdFewhbmBK5skbdsASbQ=="
    crossorigin="anonymous" />
  <!-- font awesome style -->
  <link href="css/font-awesome.min.css" rel="stylesheet" />

  <!-- Custom styles for this template -->
  <link href="css/style.css" rel="stylesheet" />
  <!-- responsive style -->
  <link href="css/responsive.css" rel="stylesheet" />

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css"
    integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css"
    integrity="sha512-PgQMlq+nqFLV4ylk1gwUOgm6CtIIXkKwaIHp/PAIWHzig/lKZSEGKEysh0TCVbHJXCLN7WetD8TFecIky75ZfQ=="
    crossorigin="anonymous" />
  <title>Rozeto</title>
</head>

<body class="sub_page">
  <!-- Cart section -->


  <style>
    @import url('https://fonts.googleapis.com/css2?family=Mulish:wght@300&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Mulish', sans-serif;
    }

    :root {
      --text-clr: #4f4f4f;
    }

    p {
      color: #6c757d;
    }

    a {
      text-decoration: none;
      color: var(--text-clr);
    }

    a:hover {
      text-decoration: none;
      color: var(--text-clr);
    }

    h2 {
      color: var(--text-clr);
      font-size: 1.5rem;
    }

    .main_cart {
      background: #fff;
    }

    .card {
      border: none;
    }

    .product_img img {
      min-width: 200px;
      max-height: 200px;
    }

    .product_name {
      color: black;
      font-size: 1.4rem;
      text-transform: capitalize;
      font-weight: 500;
    }

    .card-title p {
      font-size: 0.9rem;
      font-weight: 500;
    }

    .remove-and-wish p {
      font-size: 0.8rem;
      margin-bottom: 0;
    }

    .price-money h3 {
      font-size: 1rem;
      font-weight: 600;
    }

    .set_quantity {
      position: relative;
    }

    .set_quantity::after {
      content: "(Note, 1 piece)";
      width: auto;
      height: auto;
      text-align: center;
      position: absolute;
      bottom: -20px;
      right: 1.5rem;
      font-size: 0.8rem;
    }

    .page-link {
      line-height: 16px;
      width: 45px;
      font-size: 1rem;
      display: flex;
      justify-content: center;
      align-items: center;
      color: #495057;
    }

    .page-item input {
      line-height: 22px;
      padding: 3px;
      font-size: 15px;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
    }

    .page-link:hover {
      text-decoration: none;
      color: #495057;
      outline: none !important;
    }

    .page-link:focus {
      box-shadow: none;
    }

    .price_indiv p {
      font-size: 1.1rem;
    }

    .fa-heart:hover {
      color: red;
    }
  
    .empty-cart {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 54vh; /* Adjust height as needed */
        color: #555;
    }

    .empty-cart-content {
        text-align: center;
        max-width: 400px;
    }

    .empty-cart-image {
        max-width: 100%;
        height: auto;
    }

    .empty-cart-text {
        font-size: 2em;
        margin-top: 20px;
        font-weight: bold;
    }

    .empty-cart-subtext {
        margin-top: 10px;
        font-size: 1.2em;
        color: #777;
    }

    .empty-cart-button {
        margin-top: 20px;
        padding: 10px 20px;
        font-size: 1em;
        border-radius: 50px;
    }
   </style>


  <body class="bg-light">
    <nav aria-label="breadcrumb" class="breda mx-5 mt-2">
      <ol class="breadcrumb breadcrumb-custom">
        <li class="breadcrumb-item">
          <a href="/"><i class="fas fa-home me-2"></i>Home</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Cart</li>
      </ol>
    </nav>
    <div class="container-fluid">
      <div class="row justify-content-center p-5">
        <div class="col-md-8 col-lg-8 col-12">
          <!-- Left Section (Cart Items) -->
          <div class="main_cart shadow mb-4">
            <h3 class="py-2 mx-3 font-weight-bold">Cart (<%=products.length%> items)</h3>
            <%if(products.length==0){%>
              <div class="container text-center empty-cart">
                <div class="empty-cart-content">
                    <img src="https://cdni.iconscout.com/illustration/premium/thumb/empty-cart-illustration-download-in-svg-png-gif-file-formats--shopping-ecommerce-simple-error-state-pack-user-interface-illustrations-6024626.png?f=webp" alt="Empty Cart" class="empty-cart-image" style="width: 12rem;">
                    <h4 class="empty-cart-text">Your cart is empty!</h4>
                    <p class="empty-cart-subtext">Start adding products you love.</p>
                    <a href="/menu" class="btn btn-primary empty-cart-button">Shop Now</a>
                </div>
                  </div>            
                </div>
              </div>
            </div>
            <% }else{ %>
            <!-- Product Cart Card START -->
            <% products.forEach(product=>{%>
            <div class="card p-4">
              <hr />
              <div class="row">
                <!-- Cart Images Div -->
                <div class="col-md-5 col-11 mx-auto bg-light d-flex justify-content-center align-items-center shadow product_img">
                  <img src="<%= product.productImages[0].replace(/\\/g, '/') %>" class="img-fluid" alt="<%= product.productName %>">
                </div>
                <!-- Cart Product Details -->
                <div class="col-md-7 col-11 mx-auto px-4 mt-2">
                  <div class="row">
                    <div class="col-6 card-title">
                      <h4 class="mb-4 product_name"><%= product.productName %></h4>
                      <p class="mb-2">Price: ₹&nbsp;<%= product.salePrice %></p>
                      <p class="mb-3">Stock: <%= product.stock %></p>
                      <!-- <p class="mb-3">SIZE: M</p> -->
                    </div>
                    <div class="col-6">
                      <ul class="pagination justify-content-end set_quantity">
                        <li class="page-item">
                          <button class="page-link" onclick="decrementQuantity('<%= product._id %>')">
                            <i class="fas fa-minus"></i>
                          </button>
                        </li>
                        <li class="page-item">
                          <input type="text" name="everyone" class="page-link" onchange="updateCartItem('<%= product._id %>')" value="<%= product.quantity %>" min="1" max="5" id="quantity-<%= product._id %>" readonly>
                        </li>
                        <li class="page-item">
                          <button class="page-link" onclick="incrementQuantity('<%= product._id %>','<%= product.stock %>')">
                            <i class="fas fa-plus"></i>
                          </button>
                        </li>
                      </ul>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-8 d-flex remove_wish">
                      <a href="" onclick="removeFromCart('<%= product._id %>')"><p><i class="fa-solid fa-trash"></i></p></a>
                    </div>
                    <div class="col-4 d-flex justify-content-end price_money">
                      <h3>₹<span id="itemval"><%=product.totalPrice%></span></h3>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Product Cart Card END -->
            <%});%>
            <hr/>
            <div class="row px-5 py-3">
              <!-- Continue Shopping Button -->
              <div class="col-lg-6 col-md-6 col-sm-6 mb-3">
                <div class="text-center">
                  <a href="/menu" 
                    class="btn btn-outline-primary btn-lg w-100" 
                    style="border-radius: 25px; font-weight: bold;">
                    Continue Shopping
                  </a>
                </div>
              </div>

              <!-- Update Cart Button -->
              <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="text-center">
                  <a onclick="window.location.reload()" 
                    class="btn btn-primary btn-lg w-100 d-flex justify-content-center align-items-center" 
                    style="border-radius: 25px; font-weight: bold;">
                    <i class="fa fa-spinner me-2"></i> Update Cart
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>

        
        <!-- Right Section (Summary) -->
        <div class="col-md-4 col-lg-4 col-12">
          <div class="right_side p-3 shadow bg-white">
            <h4 class="product_name mb-5">The Total Amount Of</h4>
            <div class="price_indiv d-flex justify-content-between">
              <p>Product amount</p>
              <p>₹<span id="product_total_amt"><span id="cart-subtotal">&nbsp;<%= (products.reduce((total, product)=>
                total+product.totalPrice, -totalOfferDiscount)).toFixed(2) %></span></p>
            </div>
            <div class="price_indiv d-flex justify-content-between">
              <p>Tax(10%)</p>
              <p>₹<span id="cart-tax">&nbsp;<%= tax.toFixed(2) %></span></p>
            </div>
            <div class="price_indiv d-flex justify-content-between">
              <p>Discount Price </p>
              <p>-₹<span id="cart-tax">&nbsp;0 </span></p>
            </div>
            <div class="price_indiv d-flex justify-content-between">
              <p>Coupon Applied</p>
              <p>-₹<span id="cart-tax">&nbsp;0</span></p>
            </div>
            <hr />
            <div class="total-amt d-flex justify-content-between font-weight-bold">
              <p>The total amount of</p>
              <p>₹<span id="cart-total"><%= (products.reduce((total, product)=> total +
                product.totalPrice, tax-totalOfferDiscount)).toFixed(2) %></span></p>
            </div>
            <button onclick="proceedToCheckout()" class="btn btn-primary text-uppercase">Proceed to Checkout</button>
          </div>
          <div class="mt-3 shadow p-3 bg-white">
            <div class="pt-4">
              <h5 class="mb-4">Expected delivery</h5>
              <p>Item Should be Delivered in an Hour.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%}%>
    
    <!-- Optional JavaScript -->
    <!-- Popper.js first, then Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js" integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous"></script>

    <script type="text/javascript">
      function incrementQuantity(productId, stock) {
            const quantityInput = document.getElementById('quantity-' + productId);
            let currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity < 5 && currentQuantity < stock) {
                quantityInput.value = currentQuantity + 1;
                updateCartItem(productId);
                
            }
            if (currentQuantity == stock) {
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'You reached the stock limit',
                    icon: 'warning',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
            } else if (currentQuantity === 5) {
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'You reached the maximum buying limit',
                    icon: 'warning',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
            }
        }

        function decrementQuantity(productId) {
            const quantityInput = document.getElementById('quantity-' + productId);
            let currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity > 1) {
                quantityInput.value = currentQuantity - 1;
                updateCartItem(productId);
                
            }
            if (currentQuantity === 1) {
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'You reached the  minimum buying limit',
                    icon: 'warning',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
            }
        }

        function updateCartItem(productId) {
            const inputField = document.getElementById(`quantity-${productId}`);
            let quantity = parseInt(inputField.value);

            axios.post('/updateCartItem', { productId, quantity })
                .then(response => {
                    if (response.data.success) {
                        const totalPriceElement = document.getElementById(`total-price-${productId}`);
                        const totalPriceElement2 = document.getElementById(`total-price2-${productId}`);
                        const quantity2 = document.getElementById(`quantity2-${productId}`)
                        const newTotalPrice = response.data.totalPrice;
                        totalPriceElement.innerHTML = `₹${newTotalPrice}`;
                        totalPriceElement2.innerHTML = `₹${newTotalPrice}`;
                        quantity2.innerHTML = quantity
                        // updateCartTotal();
                        setTimeout(() => {
                            window.location.reload()
                        }, 1000)
                    } else {
                        showErrorToast('Failed!', 'Failed to update product quantity.');
                    }
                })
                .catch(error => {
                    console.error('Error updating cart item:', error);
                    // showErrorToast('Error', 'An error occurred while updating the cart.');
                });
        }


        function updateCartTotal() {
            axios.get('/cartTotal')
                .then(response => {
                    if (response.data.success) {
                        const cartSubtotalElement = document.getElementById('cart-subtotal');
                        const cartTotalElement = document.getElementById('cart-total');
                        const cartTax = document.getElementById('cart-tax');
                        const newSubtotal = response.data.subtotal;
                        const newTotal = response.data.total;
                        const newTax = response.data.tax

                        cartSubtotalElement.innerHTML = `₹${newSubtotal.toFixed(2)}`;
                        cartTotalElement.innerHTML = `₹${newTotal.toFixed(2)}`;
                        cartTax.innerHTML = `₹${newTax.toFixed(2)}`;
                    }
                    setTimeout(() => {
                        window.location.reload()
                    }, 1000)
                })
                .catch(error => {
                    console.error('Error fetching cart total:', error);
                });
        }

        function showErrorToast(title, text) {
            Swal.fire({
                toast: true,
                timer: 1500,
                timerProgressBar: true,
                title: text,
                icon: 'warning',
                position: 'top-end',
                showConfirmButton: false,
                customClass: {
                    popup: 'custom-toast'
                }
            });
        }


        function removeFromCart(itemId) {
            axios.post('/removeFromCart', { itemId })
                .then(response => {
                    if (response.data.success) {
                        const cartItem = document.getElementById(`cart-item-${itemId}`);
                        if (cartItem) {
                            cartItem.remove();
                        }
                        Swal.fire({
                            toast: true,
                            timer: 1000,
                            timerProgressBar: true,
                            title: response.data.message,
                            icon: 'success',
                            position: 'top-end',
                            showConfirmButton: false,
                            customClass: {
                                popup: 'custom-toast'
                            }
                        })
                        window.location.reload()
                    }
                })
                .catch(error => {
                    Swal.fire({
                        toast: true,
                        timer: 1000,
                        timerProgressBar: true,
                        title: 'Error!',
                        text: 'Failed to remove product from cart.',
                        icon: 'error',
                        position: 'top-end',
                        showConfirmButton: false,
                        customClass: {
                            popup: 'custom-toast'
                        }
                    });
                    window.location.reload()
                    console.error(error);
                });
        }

      

      function proceedToCheckout() {

        const quantityInputs = document.getElementsByName('everyone'); 

        for (const input of quantityInputs) {
          const quantity = parseInt(input.value); 

          if (quantity > 5) {
            showErrorToast('Failed!', `Maximum Product Quantity Exceeded in an input.`);
            return; 
          }
        } 
        

        // If all inputs are valid, proceed with the rest of your code

        Swal.fire({
          title: 'Are you sure?',
          text: 'You are about to proceed to checkout.',
          icon: 'question',
          showCancelButton: true,
          confirmButtonText: 'Yes, Proceed!',
          cancelButtonText: 'Cancel',
        }).then((result) => {
          if (result.isConfirmed) {
            // Redirect to checkout
            window.location.href = '/checkout';
          }
        });
      }


  
    </script>
    <!-- Cart Section -->
    <%- include("../../views/partials/user/footer.ejs") %>
