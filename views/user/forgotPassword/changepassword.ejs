<%- include("../../views/partials/user/header.ejs") %>

<div class="text-center pt-2">
    <div class="container w-50 rounded pt-5">
        <div class="border border-2 py-5 rounded-4 shadow-lg">
            <div>
                <h3>Enter New Password</h3>
            </div>
            <div class="d-flex justify-content-center align-items-center mt-3">
                <div class="w-50">
                    <form id="changePasswordForm">
                        <div class="form-group">
                            <label for="newPassword" class="float-start fw-semibold pt-3 d-flex justify-content-start">New Password</label><br><br>
                            <div class="d-flex justify-content-center align-items-center">
                                <div class="input-group mb-3">
                                    <input type="password" class="form-control" name="newPassword" id="newPassword" required>
                                    <span class="input-group-text" id="toggle-password2" style="cursor: pointer;">
                                        <i class="fas fa-eye" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="text-danger text-center mt-2" id="msg">
                            <span></span>
                        </div>
                        <div class="form-group">
                            <label for="confirmPassword" class="float-start fw-semibold pt-3 d-flex justify-content-start">Confirm Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" name="confirmPassword" id="confirmPassword" required>
                                <span class="input-group-text" id="toggle-password3" style="cursor: pointer;">
                                    <i class="fas fa-eye" aria-hidden="true"></i>
                                </span>
                            </div>
                        </div>
                        <div class="text-danger text-center mt-2" id="msg">
                            <span></span>
                        </div>
                        <div class="text-center">
                            <button type="button" class="btn btn-dark rounded-pill mx-3" onclick="submitNewPassword()">OK</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="m-5"></div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const togglePasswordBtn2 = document.getElementById('toggle-password2');
    const togglePasswordBtn3 = document.getElementById('toggle-password3');

    togglePasswordBtn2.addEventListener('click', () => {
        const type = newPassword.getAttribute('type') === 'password' ? 'text' : 'password';
        newPassword.setAttribute('type', type);
        const icon = togglePasswordBtn2.querySelector('i');
        if (type === 'password') {
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    });

    togglePasswordBtn3.addEventListener('click', () => {
        const type = confirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPassword.setAttribute('type', type);
        const icon = togglePasswordBtn3.querySelector('i');
        if (type === 'password') {
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    });

    function validatePassword(newPassword, confirmPassword) {
        let errors = [];

        if (newPassword.length < 8) {
            errors.push('Password must be at least 8 characters long');
        } else if (!/\d/.test(newPassword)) {
            errors.push('Password must contain a number');
        } else if (!/[a-z]/.test(newPassword)) {
            errors.push('Password must contain a lowercase letter');
        } else if (newPassword !== confirmPassword) {
            errors.push('New password and confirmation password do not match');
        }

        return errors;
    }

    async function submitNewPassword() {
        const formData = new FormData(document.getElementById('changePasswordForm'));
        const newPassword = formData.get('newPassword');
        const confirmPassword = formData.get('confirmPassword');
        console.log('Hi')
        console.log(formData)
        console.log(newPassword)
        console.log(confirmPassword)
        const errors = validatePassword(newPassword, confirmPassword);
        const msgDiv = document.getElementById('msg');
        msgDiv.innerHTML = '';

        if (errors.length > 0) {
            msgDiv.innerHTML = errors.join(',<br>');
            return;
        }

        try {
            const response = await axios.post('/resetPasswords', {
                newPassword
            });

            if (response.data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    timer: 1300,
                    text: response.data.message,
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = '/login';
                });
            } else {
                let errorMsg = response.data.message || 'Error updating password. Please try again.';
                msgDiv.innerHTML = errorMsg;

                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    html: errorMsg,
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            let errorMsg = error.response && error.response.data && error.response.data.message ? error.response.data.message : 'An unexpected error occurred. Please try again.';
            msgDiv.innerHTML = errorMsg;
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: errorMsg,
                confirmButtonText: 'OK'
            });
        }
    }
</script>

<%- include("../../views/partials/user/footer.ejs") %>
