<%-include("../../views/partials/user/header.ejs")%>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/drift-zoom@1.3.1/dist/Drift.js"></script>

    <style>
        :root {
            --primary-color: #8B4513;  /* Rich Brown */
            --secondary-color: #D2691E;  /* Chocolate */
            --accent-color: #FFD700;  /* Golden */
            --background-color: #FFF5E6;  /* Soft Cream */
            --text-color: #4A3728;  /* Dark Chocolate */
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
        }

        .product-container {
            background-color: white;
            border-radius: 20px;
            box-shadow: 0 15px 30px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-top: 50px;
            border: 2px solid var(--primary-color);
        }
 
        
        /* .product-image:hover {
            transform: scale(1.1);
        }  */

        .product-details {
            padding: 40px;
            background-color: white;
        }

        .product-title {
            font-family: 'Playfair Display', serif;
            color: var(--primary-color);
            font-weight: bold;
            margin-bottom: 20px;
        }

        .product-price {
            font-size: 2.5rem;
            color: var(--secondary-color);
            font-weight: 600;
            margin-bottom: 20px;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            justify-content: space-around;
            background-color: var(--background-color);
            border-radius: 50px;
            padding: 10px;
            max-width: 170px;
        }

        .quantity-btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.3s ease;
        }

        .quantity-btn:hover {
            background-color: var(--secondary-color);
        }

        .quantity-input {
            text-align: center;
            border: none;
            background: transparent;
            width: 60px;
            font-size: 1.2rem;
        }

        .add-to-cart-btn {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        .add-to-cart-btn:hover {
            background-color: var(--primary-color);
            transform: translateY(-5px);
        }

        .product-description {
            background-color: var(--background-color);
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }

        .review-card {
            background-color: white;
            border-left: 5px solid var(--accent-color);
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        .related-product-card {
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .related-product-card:hover {
            border-color: var(--primary-color);
            transform: scale(1.05);
        }

        .quick-view-btn {
            position: absolute;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 50px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .related-product-card:hover .quick-view-btn {
            opacity: 1;
        }

        .badge-tag {
            background-color: var(--accent-color);
            color: var(--text-color);
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
        }

        .rating {
            color: var(--accent-color);
            font-size: 1.2rem;
        }
        .carousel {
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        .carousel-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .carousel-indicators {
            bottom: 20px;
        }

        .carousel-indicators [data-bs-target] {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: rgba(255,255,255,0.5);
        }

        .carousel-indicators .active {
            background-color: var(--accent-color);
        }

        .star-rating {
            unicode-bidi: bidi-override;
            direction: rtl;
            text-align: left;
        }
        .star-rating > label {
            display: inline-block;
            position: relative;
            width: 1.1em;
            font-size: 2rem;
            color: #ccc;
            cursor: pointer;
        }
        .star-rating > label:hover,
        .star-rating > label:hover ~ label,
        .star-rating > input:checked ~ label {
            color: #ffca08;
        }
        /* .product-image {
      width: 100%;
      max-width: 400px;
      height: auto;
      cursor: zoom-in;
    } */

    .zoom-container {
      position: relative;
      overflow: hidden;
    }

    .zoom-lens {
      position: absolute;
      border: 2px solid #000;
      width: 100px;
      height: 100px;
      opacity: 0.4;
      background-color: rgba(255, 255, 255, 0.5);
      display: none; /* Initially hidden */
    }

    .zoom-result {
      position: absolute;
      width: 300px;
      height: 300px;
      border: 1px solid #ddd;
      background-repeat: no-repeat;
      background-size: 800px auto;
      display: none; /* Initially hidden */
    }
    .zoomContainer {
        position: absolute !important;
        top: 177px !important;
        left: 900px !important;
        border-radius: 10px;
    }
    input[type="text"] {
        height: 30px;
        width: 50px;
        text-align: center;
        border: 2px solid #000;
        border-radius: 5px;
        margin: 0 2px;
    }
    /* .product-image-container { 
        width: 100%; 
        height: auto; 
        position: relative; 
    } 
    .product-image { 
        width: 100%; 
        display: block; 
    } */
   
    .star-rating {
            unicode-bidi: bidi-override;
            direction: rtl;
            text-align: left;
        }
        .star-rating > label {
            display: inline-block;
            position: relative;
            width: 1.1em;
            color: #ccc;
            cursor: pointer;
        }
        .star-rating > label:hover,
        .star-rating > label:hover ~ label,
        .star-rating > input:checked ~ label {
            color: #ffca08;
        }
        .review-btn {
            margin-top: 20px;
        }
        .rating-star {
            font-size: 1.7em; /* Adjust the size as needed */
            color: gold; /* Change the color to your preference */
        }
        .rating {
            font-size: 1.6em; /* Adjust the size as needed */
            color: gold; /* Change the color to your preference */
        }
        .badge-container {
            display: flex;
            gap: 15px;
        }

        .custom-badge {
            display: inline-flex;
            align-items: center;
            padding: 10px 15px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .return-badge {
            background-color: #e6f3ff;
            color: #0066cc;
        }

        .return-badge:hover {
            background-color: #0066cc;
            color: white;
        }

        .cod-badge {
            background-color: #fff0e6;
            color: #ff6600;
        }

        .cod-badge:hover {
            background-color: #ff6600;
            color: white;
        }

        .badge-icon {
            margin-right: 8px;
            font-size: 1.2em;
        }

        .product-image-container {
            position: relative;
            max-width: 500px;
            margin: 0 auto;
        }

        .product-image {
            max-width: 100%;
            transition: all 0.3s ease;
        }

        .thumbnail-container img {
            cursor: pointer;
            opacity: 0.6;
            transition: opacity 0.3s ease;
        }

        .thumbnail-container img.active,
        .thumbnail-container img:hover {
            opacity: 1;
            border: 2px solid #007bff;
        }

        .panzoom-image {
            cursor: zoom-in;
        }

        .drift-zoom-pane {
            z-index: 1000;
            box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
        }

        .extra-offer-badge {
            display: inline-block;
            position: relative;
            background-color: #ff5252;
            color: white;
            padding: 8px 16px;
            font-weight: bold;
            border-radius: 4px;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            animation: pulse 1.5s infinite alternate;
        }
        .extra-offer-badge::before {
            content: '';
            position: absolute;
            top: -5px;
            left: -5px;
            right: -5px;
            bottom: -5px;
            background-color: #ff5252;
            opacity: 0.2;
            border-radius: 6px;
            z-index: -1;
        }
        @keyframes pulse {
            from { transform: scale(1); }
            to { transform: scale(1.05); }
        }

    </style>

</head>
<body>
    <nav aria-label="breadcrumb" class="bredaa m-5">
        <ol class="breadcrumb breadcrumb-custom">
          <li class="breadcrumb-item">
            <a href="/"><i class="fas fa-home me-2"></i>Home</a>
          </li>
          <li class="breadcrumb-item">
            <a href="/menu"></i>Menu</a>
          </li>
          <li class="breadcrumb-item active" aria-current="page">Product Details</li>
        </ol>
    </nav>
    <div class="container">
        <div class="row product-container">
            <!-- Product Image -->
            <div class="col-md-12 p-0 product-image-container" style="height: 40rem; width:40rem;"> 
                <div class="col-md-12">
                    <div class="product-image-container" style="height: 100%; width: 100%;">
                        <img 
                            src="<%= singleProduct.productImages[0].replace(/\\/g, '/') %>"
                            alt="Main Product Image" 
                            class="product-image panzoom-image"
                            style="width: 100%; height: 100%; object-fit: contain;" 
                            data-zoom="<%= singleProduct.productImages[0].replace(/\\/g, '/') %>"
                            id="mainProductImage"
                        >
                    </div>
                    
                    <div class="thumbnail-container mt-3 d-flex justify-content-start">
                        <% singleProduct.productImages.forEach((image, index) => { %>
                            <img 
                                src="<%= image.replace(/\\/g, '/') %>" 
                                alt="Thumbnail <%= index + 1 %>"
                                class="img-thumbnail me-2 <%= index === 0 ? 'active' : '' %>"
                                style="width: 120px; height: 120px; object-fit: cover;"
                                data-main-image="<%= image.replace(/\\/g, '/') %>"
                                onclick="changeThumbnail(this)"
                            >
                        <% }); %>
                    </div>
                    
                </div>                
            </div>
            
            <!-- Product Details -->
            <div class="col-md-6 product-details">
                <span class="badge badge-tag"><%= singleProduct.category.name%></span>
                <h1 class="product-title mt-3"><%= singleProduct.productName %></h1>
                
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="product-price">₹&nbsp;<%= singleProduct.salePrice %></h2>
                    <h2 class="product-price " style="font-size: medium;text-decoration: line-through;margin-right: 14rem;margin-top: 1rem;">₹&nbsp;<%= singleProduct.regularPrice %></h2>                            
                    <div class="rating-star"> 
                        <% for (let i = 0; i < Math.floor(averageRating); i++) { %> 
                            ★ 
                        <% } %> 
                        <% if (averageRating % 1 >= 0.5) { %> 
                            ★ 
                        <% } %> 
                        <% for (let i = Math.ceil(averageRating); i < 5; i++) { %> 
                            ☆ 
                        <% } %> 
                        <br>
                        <span class="text-muted" style="font-size: medium;">(<%= reviewCount %> reviews)</span>  
                    </div>
                                        
                </div>

                <!-- Quantity Control -->
                 <div class="d-flex">

                     <div class="quantity-control my-4 me-5">
                         <button id="decreaseQty" onclick="decrementQuantity('<%= singleProduct._id %>')" class="quantity-btn">-</button>
                         <input type="text" id="quantity-<%= singleProduct._id %>" style="border: none;" value="<%=productQuantityInCart===0 ? 1 : productQuantityInCart %>" min="1" max="5" class="quantity-input" readonly>
                         <button id="increaseQty" onclick="incrementQuantity('<%= singleProduct._id %>')" class="quantity-btn">+</button>
                     </div>
                     <% if (singleProduct.offerPercentage!==0 && singleProduct.quantity!==0) { %>
                     <div class="containe text-center" style="margin-top: 2rem;">
                         <div class="extra-offer-badge">
                             Extra <%=singleProduct.offerPercentage %>% Off
                         </div>
                     </div>
                     <%}%>
                 </div>

                <!-- Add to Cart -->
                <% if (singleProduct.quantity===0 || singleProduct.status==='Out of Stock') { %>
                    <span class="badge bg-danger text-white py-2 px-3 rounded-pill fs-6" style="cursor: not-allowed;" >Out Of Stock</span>
                <% } else if (singleProduct.status==="Discontinued") { %>
                    <span class="badge bg-danger text-white py-2 px-3 rounded-pill fs-6" style="cursor: not-allowed;" >Product Discontinued</span>
                <% } else { %>
                  
                        <button class="btn add-to-cart-btn w-100" onclick="addToCart('<%= singleProduct._id %>')"><i class="fa-solid fa-cart-shopping me-2"></i>Add to Cart</button>

                
                <% } %>

                <!-- <div class="container mt-5 text-center">
                    <div class="extra-offer-badge">
                        Extra 20% Off
                    </div>
                </div> -->

                <!-- Product Description -->
                <div class="product-description mt-4">
                    <h4>Description</h4>
                    <p><%= singleProduct.description %></p>
                    <div class="col-lg-8">
                        <div class="product__details__description">
                            <% if (singleProduct.quantity===0 && singleProduct.status!=="Discontinued" && singleProduct.status==="Out of Stock") { %>
                                <h5 class="badge bg-danger mb-3 text-light">
                                Currently Out of Stock Come back Later
                                </h5> 
                                <% } else if(singleProduct.quantity <=10 && singleProduct.status!=="Discontinued") { %>
                                <h5 class="badge bg-danger mb-3">
                                <%= singleProduct.status %> ( Only <label id="stock">
                                <%= singleProduct.quantity %>
                                </label> Items left)
                                </h5>
                                <% } else { %>
                                <h5 class="mb-3 badge bg-success">
                                <%= singleProduct.status %><label id="stock" class="d-none">
                                    <%= singleProduct.quantity %>
                                </label>
                                </h5>
                            <% } %>
                        </div>
                    </div>    
                    <div class="container text-center">
                        <div class="badge-container">
                            
                            <!-- Return Badge -->
                            <div class="custom-badge return-badge">
                                <i class="bi bi-arrow-clockwise badge-icon"></i>
                                1-Hour Return
                            </div>
                            <!-- Cash on Delivery Badge -->
                            <div class="custom-badge cod-badge">
                                <i class="bi bi-cash-coin badge-icon"></i>
                                Cash on Delivery
                            </div>
                        </div>
                    </div>  
                </div>
            </div>
        </div>

        <!-- Reviews Section -->
        <div class="row mt-5">
            <div class="col-12">
                <div class="d-flex" style="justify-content: space-between; align-items: center;">
                    <h3>Customer Reviews</h3>
                    <button id="openReviewModal" class="btn btn-primary review-btn mb-5" style="background-color: hsl(25, 97%, 42%); font-weight:bold; border: none; border-radius: 20px; width: 12rem;">
                        Write a Review
                    </button>
                </div>
        
                <% reviews.forEach(review => { %>
                    <div class="review-card">
                        <div class="d-flex justify-content-between">
                            <h5><%= review.user.name %></h5>
                            <div class="rating">
                                <% for (let i = 0; i < review.rating; i++) { %>
                                    ★
                                <% } %>
                                <% for (let i = review.rating; i < 5; i++) { %>
                                    ☆
                                <% } %>
                                <% if (review.user && review.user._id && userId && review.user._id.toString() === userId.toString()) { %>
                                    <button class="btn btn-danger btn-lg" onclick="deleteReview('<%= review._id %>', '<%= singleProduct._id %>')" style="background-color: white;border: none;"><i class="fa-solid fa-trash text-danger"></i></button>
                                <% } %>                            
                            </div>
                        </div>
                        <p>"<%= review.comment %>"</p>
                    </div>
                    <% }); %>
                <% if (reviews.length === 0) { %>
                <p>No reviews yet. Be the first to write a review!</p>
                <% } %>
            </div>
        </div>
        
        <!-- Related Products -->
        <div class="row mt-5">
            <div class="col-12">
                <h3>Related Products</h3>
                <div class="row">
                    <%for (let i=0; i < 3 && i < relatedProducts.length; i++) { const product=relatedProducts[i]; %>
                    <div class="col-md-4 mb-4" sty>
                        <div class="card related-product-card" style="width: 25rem;height: 33rem;">
                            <img src="<%= product.productImages[0].replace(/\\/g, '/') %>" class="card-img-top" alt="<%= product.productName %> ">
                            <div class="card-body">
                                <h5 class="card-title"><%= product.productName %> </h5>
                                <p class="card-text"><%= product.description %></p>
                                <p class="card-text">₹&nbsp;<%= product.salePrice %></p>
                                <button class="quick-view-btn" onclick="window.location.href='/productinfo?id=<%= product._id %>';">Quick View</button>
                            </div>
                        </div>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Container -->
    <div class="modal fade" id="reviewModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Write a Product Review</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="reviewForm">
                        <div class="mb-3">
                            <label class="form-label">Your Rating</label>
                            <div class="star-rating">
                                <input type="radio" id="star5" name="rating" value="5" class="d-none">
                                <label for="star5">★</label>
                                <input type="radio" id="star4" name="rating" value="4" class="d-none">
                                <label for="star4">★</label>
                                <input type="radio" id="star3" name="rating" value="3" class="d-none">
                                <label for="star3">★</label>
                                <input type="radio" id="star2" name="rating" value="2" class="d-none">
                                <label for="star2">★</label>
                                <input type="radio" id="star1" name="rating" value="1" class="d-none">
                                <label for="star1">★</label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="reviewComment" class="form-label">Your Review</label>
                            <textarea 
                                class="form-control" 
                                id="reviewComment" 
                                rows="4" 
                                placeholder="Tell us about your experience..."
                            ></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="submitReview">Submit Review</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap JS and Dependencies -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>

    
   
    <!-- Custom JavaScript -->
    <script>
       document.addEventListener('DOMContentLoaded', function() {
            // Initialize Drift Zoom for the main product image
            const mainImage = document.getElementById('mainProductImage');
            mainImage.drift = new Drift(mainImage, {
                paneContainer: document.body,
                inlinePane: window.innerWidth > 768 ? true : false,
                zoomFactor: 3,
                hoverBoundingBox: true,
                touchMovePan: true,
                inline: true
            });
        });

        // Thumbnail Change Function
        function changeThumbnail(thumbnailElement) {
            // Remove active class from all thumbnails
            const thumbnails = document.querySelectorAll('.thumbnail-container img');
            thumbnails.forEach(thumb => {
                thumb.classList.remove('active');
            });

            // Add active class to clicked thumbnail
            thumbnailElement.classList.add('active');

            // Change main image
            const mainImage = document.getElementById('mainProductImage');
            const newImageSrc = thumbnailElement.getAttribute('data-main-image');
            mainImage.src = newImageSrc;

            // Update the data-zoom attribute with the new image source
            mainImage.setAttribute('data-zoom', newImageSrc);

            // Destroy existing Drift instance if it exists
            if (mainImage.drift) {
                mainImage.drift.destroy();
                delete mainImage.drift;
            }

            // Ensure Drift is reinitialized after the new image is fully loaded
            mainImage.onload = () => {
                mainImage.drift = new Drift(mainImage, {
                    paneContainer: document.body,
                    inlinePane: window.innerWidth > 768 ? true : false,
                    zoomFactor: 3,
                    hoverBoundingBox: true,
                    touchMovePan: true,
                    inline: true
                });
            };
        }


        document.addEventListener('DOMContentLoaded', function() {
            const openReviewModalBtn = document.getElementById('openReviewModal');
            const reviewModal = new bootstrap.Modal(document.getElementById('reviewModal'));

            if (openReviewModalBtn) {
                openReviewModalBtn.addEventListener('click', function() {
                    reviewModal.show();
                });
            }

            document.getElementById('submitReview').addEventListener('click', async function() {
                const rating = document.querySelector('input[name="rating"]:checked');
                const comment = document.getElementById('reviewComment').value;
                const productId = '<%= singleProduct._id %>';

                if (!rating) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Oops...',
                        text: 'Please select a rating!',
                    });
                    return;
                }

                if (!comment) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Oops...',
                        text: 'Please provide a comment!',
                    });
                    return;
                }
                try {
                    const response = await axios.post('/addReview', {
                        productId,
                        rating: rating.value,
                        comment
                    });

                    if (response.data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Thank you!',
                            text: 'Review submitted successfully!',
                            timer: 1500
                        }).then(() => {
                            reviewModal.hide();
                            document.getElementById('reviewForm').reset();
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: response.data.message,
                        });
                    }
                } catch (error) {
                    console.error('Error submitting review:', error);
                    const errorMessage = error.response && error.response.data && error.response.data.message
                        ? error.response.data.message
                        : 'An unknown error occurred. Please try again later.';

                    Swal.fire({
                        icon: 'error',
                        title: 'Failed to submit review',
                        text: errorMessage,
                    });
                }
            });
        });



        
        function addToCart(productId) {
            event.preventDefault();
            const inputField = document.getElementById(`quantity-${productId}`);
            let quantity = parseInt(inputField.value);

            // Ensure valid quantity
            if (quantity < 1) {
                inputField.value = 1;
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'Invalid Quantity!',
                    text: 'Quantity cannot be less than 1.',
                    icon: 'error',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
                return;
            } else if (quantity > 5) {
                inputField.value = 5;
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'Invalid Quantity!',
                    text: 'Quantity cannot be greater than 5.',
                    icon: 'error',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
                return;
            }

            // Axios post request to add product to cart
            axios.post('/addProductToCart', { productId, quantity })
                .then(response => {
                    if (response.data.success) {
                        Swal.fire({
                            toast: true,
                            timer: 800,
                            timerProgressBar: true,
                            title: 'Added!',
                            text: response.data.message,
                            icon: 'success',
                            position: 'top-end',
                            showConfirmButton: false,
                            customClass: {
                                popup: 'custom-toast'
                            }
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        let errorMessage = 'Please check if you are logged in or not.';
                        if (response.data.message === 'You have reached the maximum buying limit for this product.Decrease Quantity') {
                            errorMessage = response.data.message;
                        }
                        Swal.fire({
                            toast: true,
                            timer: 1500,
                            timerProgressBar: true,
                            title: 'Failed!',
                            text: errorMessage,
                            icon: 'error',
                            position: 'top-end',
                            showConfirmButton: false,
                            customClass: {
                                popup: 'custom-toast'
                            }
                        });
                    }
                })
                .catch(error => {
                    console.error('There was an error adding the product to the cart:', error);
                    Swal.fire({
                        toast: true,
                        timer: 1500,
                        timerProgressBar: true,
                        title: 'Error!',
                        text: error.response && error.response.data ? error.response.data.message : 'An error occurred. Please try again later.',
                        icon: 'error',
                        position: 'top-end',
                        showConfirmButton: false,
                        customClass: {
                            popup: 'custom-toast'
                        }
                    });
                });
        }



        function incrementQuantity(productId) {
            const quantityInput = document.getElementById('quantity-' + productId);
            const stockQuantity = document.getElementById('stock').textContent
            let currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity < stockQuantity && currentQuantity < 5) {
                quantityInput.value = currentQuantity + 1;
               
            }
            if (currentQuantity == stockQuantity) {
                Swal.fire({
                    toast: true,
                    timer: 1500,
                        timerProgressBar: true,
                    title: 'You reached the stock limit',
                    icon: 'warning',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
            } else if (currentQuantity === 5) {
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'You reached the maximum buying limit',
                    icon: 'warning',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
            }
        }

        function decrementQuantity(productId) {
            const quantityInput = document.getElementById('quantity-' + productId);
            let currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity > 1) {
                quantityInput.value = currentQuantity - 1;
               
            }
            if (currentQuantity === 1) {
                Swal.fire({
                    toast: true,
                    timer: 1500,
                    timerProgressBar: true,
                    title: 'You reached the  minimum buying limit',
                    icon: 'warning',
                    position: 'top-end',
                    showConfirmButton: false,
                    customClass: {
                        popup: 'custom-toast'
                    }
                });
            }
        }

        async function deleteReview(reviewId, productId) {
            try {
                const response = await axios.post('/deleteReview', {
                    reviewId,
                    productId
                });

                if (response.status === 200) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'Review deleted successfully!',
                    }).then(() => {
                        location.reload(); // Reload the page to show updated reviews
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to delete review. Please try again.',
                    });
                }
            } catch (error) {
                console.error('Error deleting review:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Failed to delete review. Please try again.',
                });
            }
        }

    </script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<%-include("../../views/partials/user/footer.ejs")%>
