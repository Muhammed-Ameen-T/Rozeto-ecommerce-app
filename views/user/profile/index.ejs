<%- include("../../views/partials/user/header.ejs") %>

    <style>
        body {
            background: #f5f5f5;
        }

        .ui-w-80 {
            width : 80px !important;
            height: auto;
        }

        .btn-default {
            border-color: rgba(24, 28, 33, 0.1);
            background  : rgba(0, 0, 0, 0);
            color       : #4E5155;
        }

        label.btn {
            margin-bottom: 0;
        }

        .btn-outline-primary {
            border-color: #26B4FF;
            background  : transparent;
            color       : #26B4FF;
        }

        .btn {
            cursor: pointer;
        }

        .text-light {
            color: #babbbc !important;
        }

        .btn-facebook {
            border-color: rgba(0, 0, 0, 0);
            background  : #3B5998;
            color       : #fff;
        }

        .btn-instagram {
            border-color: rgba(0, 0, 0, 0);
            background  : #000;
            color       : #fff;
        }

        .card {
            background-clip: padding-box;
            box-shadow     : 0 1px 4px rgba(24, 28, 33, 0.012);
        }

        .row-bordered {
            overflow: hidden;
        }

        .account-settings-fileinput {
            position  : absolute;
            visibility: hidden;
            width     : 1px;
            height    : 1px;
            opacity   : 0;
        }

        .account-settings-links .list-group-item.active {
            font-weight: bold !important;
        }

        html:not(.dark-style) .account-settings-links .list-group-item.active {
            background: transparent !important;
        }

        .account-settings-multiselect~.select2-container {
            width: 100% !important;
        }

        .light-style .account-settings-links .list-group-item {
            padding     : 0.85rem 1.5rem;
            border-color: rgba(24, 28, 33, 0.03) !important;
        }

        .light-style .account-settings-links .list-group-item.active {
            color: #4e5155 !important;
        }

        .material-style .account-settings-links .list-group-item {
            padding     : 0.85rem 1.5rem;
            border-color: rgba(24, 28, 33, 0.03) !important;
        }

        .material-style .account-settings-links .list-group-item.active {
            color: #4e5155 !important;
        }

        .dark-style .account-settings-links .list-group-item {
            padding     : 0.85rem 1.5rem;
            border-color: rgba(255, 255, 255, 0.03) !important;
        }

        .dark-style .account-settings-links .list-group-item.active {
            color: #fff !important;
        }

        .light-style .account-settings-links .list-group-item.active {
            color: #006eff !important;
        }

        .light-style .account-settings-links .list-group-item {
            padding     : 0.85rem 1.5rem;
            border-color: rgba(24, 28, 33, 0.03) !important;
        }
        
        .form-group {
            position: relative;
        }
        .toggle-password {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 16px;
            color: #6c757d;
        }
        .referral-card {
            height: 120px;
            margin: 20px 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .referral-code {
            background-color: #f8f9fa;
            border: 2px dashed #007bff;
            letter-spacing: 3px;
            font-weight: bold;
            max-width: 150px;
        }
        .share-buttons .btn {
            margin: 0 5px;
            padding: 6px 12px;
            font-size: 0.8rem;
        }
        .vertical-center {
            display: flex;
            align-items: center;
            height: 100%;
        }
        .referral-text {
            font-size: 0.9rem;
            color: #6c757d;
        }

    </style>
</head>

    <div class="container light-style flex-grow-1 container-p-y mb-5">
        <nav aria-label="breadcrumb" class="bredaa mt-3">
            <ol class="breadcrumb breadcrumb-custom">
              <li class="breadcrumb-item">
                <a href="/"><i class="fas fa-home me-2"></i>Home</a>
              </li>
              <li class="breadcrumb-item active" aria-current="page">Account</li>
            </ol>
          </nav>
        <h4 class="font-weight-bold pb-3 mb-4">
            Account settings
        </h4>
        <div class="card overflow-hidden ">
            <div class="row no-gutters row-bordered row-border-light">
                <div class="col-md-3 pt-0" style="border-right:1px solid grey;">
                    <div class="list-group list-group-flush account-settings-links">
                        <a class="list-group-item list-group-item-action active" 
                            href="/profile"><i class="fa-solid fa-user"></i>&nbsp;&nbsp;General</a>
                        <a class="list-group-item list-group-item-action"
                            href="/userPassword"><i class="fa-solid fa-key"></i>&nbsp;&nbsp;Change password</a>
                        <a class="list-group-item list-group-item-action" 
                            href="/userAddresses"><i class="fa-solid fa-location-dot"></i>&nbsp;&nbsp;Address</a>
                        <a class="list-group-item list-group-item-action" 
                            href="/userOrders"><i class="fa-solid fa-box"></i>&nbsp;&nbsp;Orders</a>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="tab-content">
                        <div class="tab-pane fade active show p-4" id="account-general">
                            <h3 class="mt-3 ml-3">Account Details</h3>
                            <hr class="border-light m-0">
                            <form action="/editUserProfile/<%= user._id %>" method="post" id="editUserProfileForm">
                                <div class="card-body">
                                    <!-- Username Field -->
                                    <div class="form-group">
                                        <label class="form-label">Username</label>
                                        <input type="text" name="name" class="form-control mb-1"  oninput="handleChange('g-name')" value="<%= user.name %>" id="g-name">
                                        <small id="g-nameError" class="text-danger"></small> <!-- Error message -->
                                    </div>
                            
                                    <!-- Phone Field -->
                                    <div class="form-group">
                                        <label class="form-label">Phone Number</label>
                                        <input type="number" name="phone" class="form-control" minlength="10" oninput="handleChange('g-phone')" value="<%= user && user.phone ? user.phone : '' %>" id="g-phone">
                                        <small id="g-phoneError" class="text-danger"></small> <!-- Error message -->
                                    </div>
                            
                                    <!-- Email Field (Read-only) -->
                                    <div class="form-group">
                                        <label class="form-label">E-mail</label>
                                        <input type="text" class="form-control mb-1" value="<%= user.email %>" readonly>
                                    </div>
                                    <div class="card referral-card">
                                        <div class="card-body">
                                            <div class="row vertical-center">
                                                <div class="col-4 text-center">
                                                    <div class="input-group justify-content-center">
                                                        <div class="form-control referral-code text-center py-1" id="referralCode">
                                                            <%=user.referralCode%>
                                                        </div>
                                                        <button class="btn btn-outline-primary" type="button" onclick="copyCode()">
                                                            <i class="far fa-copy"></i>
                                                        </button>
                                                    </div>
                                                    <small class="referral-text mt-2 d-block">Referral Code</small>
                                                </div>
                                                <div class="col-8 d-flex justify-content-start align-items-center">
                                                    <div>
                                                        <p class="mb-2 referral-text">
                                                            Invite friends and earn rewards! Share your unique referral code. Win ₹50 instantly in your wallet! 💰 . Share using this Apps.
                                                        </p>
                                                        <div class="share-buttons">
                                                            <a href="#" class="btn btn-success btn-sm" id="share-whatsapp">
                                                                <i class="fab fa-whatsapp"></i> WhatsApp
                                                            </a>
                                                            <a href="#" class="btn btn-primary btn-sm" id="share-facebook">
                                                                <i class="fab fa-facebook"></i> Facebook
                                                            </a>
                                                        </div>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">User Joined On <%= new Date(user.createdAt).toLocaleString() %></label>
                                    </div>
                                </div>
                            
                                <div class="text-right mb-3 me-3">
                                    <button type="submit" class="btn btn-primary">Save changes</button>&nbsp;
                                    <button type="button" class="btn btn-default" onclick="window.history.back();">Cancel</button>
                                </div>
                            </form>
                            
                        </div>
                        <div class="tab-pane fade pb-4 pl-5 p-5" id="account-change-password">
                            <h3 class="mt-3 ml-3">Change Password</h3>
                            <form id="passwordForm" method="post" action="">
                                <div class="card-body pb-2">
                                    <div class="form-group position-relative">
                                        <label for="currentPassword" class="form-label">Current password</label>
                                        <input type="password" id="currentPassword" class="form-control">
                                        <span class="toggle-password mt-2" id="toggleCurrentPassword">
                                            <i class="fa fa-eye" aria-hidden="true"></i>
                                        </span>
                                        <small id="currentPasswordError" class="text-danger"></small>
                                    </div>
                                    <div class="form-group position-relative">
                                        <label for="newPassword" class="form-label">New password</label>
                                        <input type="password" id="newPassword" class="form-control">
                                        <span class="toggle-password mt-2" id="toggleNewPassword">
                                            <i class="fa fa-eye" aria-hidden="true"></i>
                                        </span>
                                        <small id="newPasswordError" class="text-danger"></small>
                                    </div>
                                    <div class="form-group position-relative">
                                        <label for="repeatNewPassword" class="form-label">Repeat new password</label>
                                        <input type="password" id="repeatNewPassword" class="form-control">
                                        <span class="toggle-password mt-2" id="toggleRepeatNewPassword">
                                            <i class="fa fa-eye" aria-hidden="true"></i>
                                        </span>
                                        <small id="repeatNewPasswordError" class="text-danger"></small>
                                    </div>
                                </div>
                                <div class="text-right mt-3 me-3">
                                    <button type="submit" class="btn btn-primary">Change Password</button>&nbsp;
                                    <a href="/profile"><button type="button" class="btn btn-default">Cancel</button></a>
                                </div>
                            </form>                            
                        </div>
                        <div class="tab-pane fade" id="account-info">
                            <div class="container py-5 pt-4 pe-5">
                                <div class="d-flex" style="justify-content: space-between;">
                                    <h4 class="mb-4">Saved Addresses</h4>
                                    <button type="button" class="btn btn-primary mb-3" style="margin-left: 1.1rem;" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                                        Add Address
                                    </button>    
                                </div>
                                <!-- Address Card -->
                                <% if (addresses.length===0 ) { %>
                                    <p>No addresses found. Please add one to place an order.</p>
                                <% } else { %>
                                    <% addresses.forEach((address, index)=> { %>
                                        <div class="card shadow-sm mb-3">
                                            <div class="card-body">
                                                <div class="d-flex" >
                                                    <h5 class="card-title"><%= address.name %></h5>
                                                    <%if(address.isActive===true){%>
                                                     <span class="badge bg-success" style="height: 20px;margin-left: 2rem;">Primary Address</span>
                                                    <%}%> 
                                                </div>

                                                <p class="card-text mb-1">
                                                    <strong>Address:</strong> <%= address.locality %>, &nbsp;<%= address.landMark %>
                                                </p>
                                                <p class="card-text mb-1">
                                                    <strong>Address Type:</strong> <%= address.addressType %>
                                                </p>
                                                <p class="card-text mb-1">
                                                    <strong>City:</strong> <%= address.city %>
                                                </p>
                                                <p class="card-text mb-1">
                                                    <strong>State:</strong> <%= address.state %>
                                                </p>
                                                <p class="card-text mb-1">
                                                    <strong>ZIP Code:</strong> <%= address.pincode %>
                                                </p>
                                                <p class="card-text mb-1">
                                                <strong>Phone:</strong> <%= address.phone %>
                                                </p>
                                                <%if(address.altPhone){%>
                                                <p class="card-text mb-3">
                                                    <strong>Alternative Phone:</strong> <%= address.altPhone %>
                                                </p>
                                                <%}%>
                                    
                                                <!-- Action Buttons -->
                                                <div class="d-flex justify-content-between">
                                                    <button class="btn btn-primary btn-sm" onclick="window.location.href='/loadEditAddressPage?id=<%= address._id %>'">
                                                        <i class="bi bi-pencil"></i> Edit
                                                    </button>
                                                    <button class="btn btn-danger btn-sm" id="delete-btn" data-id="<%= address._id %>" >
                                                        <i class="bi bi-trash"></i> Delete
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                <% } %>
                            </div>
                            
                            <!-- Add Address Button -->
                            

                            <!-- Modal for Add Address -->
                            <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="addAddressModalLabel">Add Shipping Address</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <!-- Add Address Form -->
                                            <form action="/addAddress/<%= user._id %>" method="post">
                                                <div class="form-group">
                                                    <label class="form-label">Address Type</label>
                                                    <select name="addressType" id="addressType" class="form-control  shadow ">
                                                        <option value="Home">Home</option>
                                                        <option value="Work">Work</option>
                                                    </select>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label mt-2">Full Name</label>
                                                    <input type="text" name="name" class="form-control" id="fullName" placeholder="Enter your full name">
                                                    <small class="text-danger" id="fullNameError" style="display: none;">Full Name is required</small>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">Phone</label>
                                                    <input type="text" name="phone" class="form-control" id="addAddressphone" placeholder="Enter your phone number">
                                                    <small class="text-danger" id="addAddressphoneError" style="display: none;">Phone is required and must be valid</small>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">Alternative Phone</label>
                                                    <input type="text" name="altphone" class="form-control" id="addAddressaltphone" placeholder="Enter your phone number">
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">Locality</label>
                                                    <input type="text" name="locality" class="form-control" id="street" placeholder="Enter your street address">
                                                    <small class="text-danger" id="streetError" style="display: none;">Locality is required</small>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">City</label>
                                                    <input type="text" name="city" class="form-control" id="city" placeholder="Enter your city">
                                                    <small class="text-danger" id="cityError" style="display: none;">City is required</small>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">State</label>
                                                    <input type="text" name="state" class="form-control" id="state" placeholder="Enter your state">
                                                    <small class="text-danger" id="stateError" style="display: none;">State is required</small>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">Landmark</label>
                                                    <input type="text" name="landmark" class="form-control" id="landmark" placeholder="Enter your state">
                                                    <small class="text-danger" id="landmarkError" style="display: none;">Landmark is required</small>
                                                </div>
    
                                                <div class="form-group">
                                                    <label class="form-label">ZIP/Postal Code</label>
                                                    <input type="text" name="pincode" class="form-control" id="zip" placeholder="Enter your ZIP code">
                                                    <small class="text-danger" id="zipError" style="display: none;">ZIP Code is required</small>
                                                </div>
                                                <div class="form-group">
                                                   <div class="form-check">
                                                        <input class="form-check-inline " type="checkbox" name="isActive" id="isActive" value="true" >
                                                        <label class="form-check-label" for="isActive">
                                                            Set as Primary Address
                                                        </label>
                                                    </div>
                                                </div>
    
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button"  class="btn btn-primary" id="saveAddressBtn">Save Address</button>
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="account-social-links">
                            <div class="card-body pb-2">
                                <div class="container pb-4 ">
                                    <h4 class="mb-4">Your Orders</h4>
                                    <% if (orders.length===0) { %>
                                        <div class="col-12 align-content-center h3" style="height: 30vh;">
                                            <div class="alert alert-info text-center">No orders found.</div>
                                            <div class="d-flex justify-content-center py-4">
                                                <div class="continue__btn">
                                                    <a href="/shoppage">Continue Shopping</a>
                                                </div>
                                            </div>
                                        </div>
                                    <% } else { %>
                                        <% orders.forEach(order=> { %>
                                            <!-- Order Card -->
                                            <div class="card shadow-sm mb-4">
                                                <div class="card-body">
                                                    <!-- Order Details Header -->
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <h5 class="card-title mb-0">Order <%= order.orderId %></h5>
                                                        <% if (order.orderStatus==='Processing' || order.orderStatus==='Collected' ) { %>
                                                            <span class="badge bg-warning text-dark"><%= order.orderStatus %></span>
                                                        <% } else if(order.orderStatus==='Cancelled' || order.orderStatus==='Return Request' || order.orderStatus==='Returned' ) { %>
                                                            <span class="badge bg-danger"><%= order.orderStatus %></span>
                                                        <% } else  { %>
                                                            <span class="badge bg-success"><%= order.orderStatus %></span>
                                                        <%}%>
                                                    </div>
                                                    <hr>
                                                    <!-- Product Details -->
                                                    <div class="d-flex" style="justify-content: space-between;">
                                                        <div class="d-flex">
                                                            <img src="<%= order.orderedItems[0].product.productImages[0].replace(/\\/g, '/') %>" class="img-thumbnail me-3" style="width: 6rem;height: 6rem;" alt="Product Image">
                                                            <div>
                                                                <h6 class="mb-1"><%= order.orderedItems.length> 1 ?
                                                                    `${order.orderedItems[0].product.productName} ... +
                                                                    ${order.orderedItems.length-1} more item` :
                                                                    order.orderedItems[0].product.productName %></h6>
                                                                <p class="text-muted mb-1">Quantity: <%= order.orderedItems[0].quantity %></p>
                                                                <p class="text-muted mb-1">Total Price: ₹ <%= order.finalAmount.toFixed(2) %></p>
                                                            </div>
                                                        </div>
                                                        <div style="float: right;">
                                                            <p class="text-muted mb-0">
                                                                Payment Method: <strong><%= order.paymentMethod %></strong>
                                                            </p>
                                                            <p class="text-muted mb-0">
                                                                Ordered on: <strong><%= new Date(order.createdAt).toLocaleDateString() %></strong>
                                                            </p>
                                                            <p class="text-muted mb-0">
                                                                Delivery In: <strong>In an Hour</strong>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <hr>
                                                    <!-- Actions -->
                                                    <div class="d-flex justify-content-between">
                                                        <div>
                                                            <button class="btn btn-primary btn-sm" onclick="window.location.href='/orderDetails?orderId=<%= order._id %>';" >
                                                                <i class="bi bi-box-arrow-up-right"></i> View Order
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }); %>
                                    <% } %>
                                </div>                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>

    
    <script>
        // JavaScript to handle the share buttons
        const referralCode = document.getElementById('referralCode').textContent;
        const customMessage = `🚀 Join Rozeto, India's Fastest Food Delivery Platform! 🚀\n\n🍔🍕 Use my referral code: ${referralCode} 🍔🍕\n\n💰 Win ₹50 instantly in your wallet! 💰`;

    
        document.getElementById('share-facebook').href = `https://www.facebook.com/sharer/sharer.php?quote=${encodeURIComponent(customMessage)}`;
        document.getElementById('share-whatsapp').href = `https://api.whatsapp.com/send?text=${encodeURIComponent(customMessage)}`;
    </script>
    
    
    <script>
        document.getElementById('saveAddressBtn').addEventListener('click', async function () {
            let isValid = true;

            // Clear existing error messages
            document.querySelectorAll('.text-danger').forEach((error) => {
                error.style.display = 'none';
            });

            // Get input values
            const fullName = document.getElementById('fullName').value.trim();
            const phone = document.getElementById('addAddressphone').value.trim();
            const street = document.getElementById('street').value.trim();
            const city = document.getElementById('city').value.trim();
            const state = document.getElementById('state').value.trim();
            const zip = document.getElementById('zip').value.trim();
            const landmark = document.getElementById('landmark').value.trim();
            const altPhone = document.getElementById('addAddressaltphone').value.trim();
            const addressType = document.getElementById("addressType").value;
            const isActive = document.getElementById("isActive").checked;

            // Full Name Validation
            if (!fullName) {
                document.getElementById('fullNameError').style.display = 'block';
                isValid = false;
            }

            // Phone Validation
            const phoneRegex = /^[0-9]{10,15}$/; // Validates phone numbers (10-15 digits)
            if (!phone || !phoneRegex.test(phone)) {
                document.getElementById('addAddressphoneError').style.display = 'block';
                isValid = false;
            }

            // Street Validation
            if (!street) {
                document.getElementById('streetError').style.display = 'block';
                isValid = false;
            }

            // City Validation
            if (!city) {
                document.getElementById('cityError').style.display = 'block';
                isValid = false;
            }

            // Landmark Validation
            // if (!landmark) {
            //     document.getElementById('landmarkError').style.display = 'block';
            //     isValid = false;
            // }

            // State Validation
            if (!state) {
                document.getElementById('stateError').style.display = 'block';
                isValid = false;
            }

            // ZIP Code Validation
            if (!zip || isNaN(zip)) {
                document.getElementById('zipError').style.display = 'block';
                isValid = false;
            }

            // If all fields are valid, submit the form
            if (isValid) {
                const formData = {
                    addressType,
                    name: fullName,
                    phone,
                    altPhone,
                    locality: street,
                    city,
                    state,
                    pincode: zip,
                    landMark: landmark,
                    isActive
                };

                try {
                    const response = await axios.post(`/addAddress/<%= userId %>`, formData);

                    if (response.data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: response.data.message,
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/profile';
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.data.message,
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'There was an error adding the address. Please try again later.',
                        confirmButtonText: 'OK'
                    });
                }
            }
        });


        document.getElementById('editUserProfileForm').addEventListener('submit', async function(e) {
            e.preventDefault(); 

            // Clear previous error messages
            document.getElementById('g-nameError').textContent = '';
            document.getElementById('g-phoneError').textContent = '';

            // Get form data
            const name = document.getElementById('g-name').value.trim();
            const phone = document.getElementById('g-phone').value.trim();

            let valid = true;

            // Validate Name
            if (name === '') {
                document.getElementById('g-nameError').textContent = 'Username is required.';
                valid = false;
            }
            

            // If the form is valid, submit it
            if (valid) {
                const userId = "<%= user._id %>";
                const formData = {
                    name: document.getElementById('g-name').value,
                    phone: document.getElementById('g-phone').value,
                };

                try {
                    const response = await axios.post(`/editUserProfile/${userId}`, formData);

                    if (response.status === 200) {
                        Swal.fire({
                            title: 'Success',
                            text: 'Profile updated successfully!',
                            icon: 'success',
                            timer: 1000,
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = '/profile';
                        });
                    }
                } catch (error) {
                    if (error.response && error.response.data.error) {
                        Swal.fire({
                            timer: 1200,
                            title: 'Error!',
                            text: error.response.data.error,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An unexpected error occurred. Please try again later.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                }
            }
        });

        function copyCode() {
            const codeElement = document.getElementById('referralCode');
            const textArea = document.createElement('textarea');
            textArea.value = codeElement.textContent;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
        }


    </script>

    <script>
        
        document.getElementById('passwordForm').addEventListener('submit', async function (e) {
            e.preventDefault(); // Prevent form submission
            let isValid = true;

            // Clear all previous error messages
            document.querySelectorAll('.text-danger').forEach((errorElement) => (errorElement.textContent = ''));

            // Get field values
            const currentPassword = document.getElementById('currentPassword').value.trim();
            const newPassword = document.getElementById('newPassword').value.trim();
            const repeatNewPassword = document.getElementById('repeatNewPassword').value.trim();

            // Validate Current Password
            if (!currentPassword) {
                isValid = false;
                document.getElementById('currentPasswordError').textContent = 'Current password is required.';
            }

            // Validate New Password
            if (!newPassword) {
                isValid = false;
                document.getElementById('newPasswordError').textContent = 'New password is required.';
            } else if (newPassword.length < 8) {
                isValid = false;
                document.getElementById('newPasswordError').textContent = 'Password must be at least 8 characters long.';
            }

            // Validate Repeat New Password
            if (!repeatNewPassword) {
                isValid = false;
                document.getElementById('repeatNewPasswordError').textContent = 'Please confirm your new password.';
            } else if (repeatNewPassword !== newPassword) {
                isValid = false;
                document.getElementById('repeatNewPasswordError').textContent = 'Passwords do not match.';
            }

            // If all fields are valid, submit the form
            if (isValid) {
                const formData = {
                    currentPassword,
                    newPassword,
                    confirmPassword: repeatNewPassword
                };

                try {
                    const response = await axios.post('/resetPassword', formData);

                    if (response.data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            timer: 1300,
                            text: response.data.message,
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = '/profile';
                        });
                    } else {
                        let errorMsg = response.data.message || 'Error updating password. Please try again.';

                        if (response.data.errors && response.data.errors.length > 0) {
                            errorMsg = response.data.errors.map(error => error.msg).join('<br>');
                        }

                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            html: errorMsg,
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    let errorMsg = error.response && error.response.data && error.response.data.message ? error.response.data.message : 'An unexpected error occurred. Please try again.';
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: errorMsg,
                        confirmButtonText: 'OK'
                    });
                }
            }
        });

    
        // Function to toggle password visibility
        function togglePasswordVisibility(inputId, toggleId) {
            const input = document.getElementById(inputId);
            const toggle = document.getElementById(toggleId);

            toggle.addEventListener('click', () => {
                if (input.type === 'password') {
                    input.type = 'text';
                    toggle.innerHTML = '<i class="fa fa-eye-slash" aria-hidden="true"></i>';
                } else {
                    input.type = 'password';
                    toggle.innerHTML = '<i class="fa fa-eye" aria-hidden="true"></i>';
                }
            });
        }

        // Add toggle functionality to each password field
        togglePasswordVisibility('currentPassword', 'toggleCurrentPassword');
        togglePasswordVisibility('newPassword', 'toggleNewPassword');
        togglePasswordVisibility('repeatNewPassword', 'toggleRepeatNewPassword');

        document.querySelectorAll('#delete-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const addressId = this.getAttribute('data-id');
                const userConfirmed = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you really want to delete this address?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, cancel!'
                });
                if (userConfirmed.isConfirmed) {
                    try {
                        const response = await axios.delete(`/deleteAddress/${addressId}`);
                        if (response.status === 200) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: response.data.message,
                                confirmButtonText: 'OK',
                                timer:1000

                            }).then(() => {
                                this.closest('.address_item').remove();
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            title: 'Error!',
                            text: error.response?.data?.error || 'Failed to delete the address. Please try again.',
                            icon: 'error',
                            timer:1000,
                            confirmButtonText: 'OK'
                        });
                    }
                }
            });
        });

    </script>
    
    
  
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<%- include("../../views/partials/user/footer.ejs") %>
