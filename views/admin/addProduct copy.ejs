
<%- include("../../views/partials/admin/header.ejs") %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">

	<!-- Content wrapper scroll start -->
	<div class="content-wrapper-scroll">

			<div class="row gutters">
				<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">

					<!-- Card start -->
					<div class="card">
						<div class="card-header">
							<div class="card-title">Add New Product</div>
						</div>
						<div class="card-body">
							<form id="addCategoryForm" method="post" enctype="multipart/form-data" onsubmit="handleForm(event)" action="/admin/add-product">
								<div class="row gutters">
									<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12">
										<div class="field-wrapper">
											<input class="form-control" id="pname" name="name" type="text">
											<div class="field-placeholder">Name <span class="text-danger">*</span></div>
											<span id="name-error" class="error-message text-danger"></span>
											<div class="form-text">Please Enter Product Name.</div>
										</div>
									</div>
							
									<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12">
										<div class="field-wrapper">
											<input class="form-control" id="pdesc" name="description" type="text">
											<div class="field-placeholder">Description <span class="text-danger">*</span></div>
											<span id="desc-error" class="error-message text-danger"></span>
											<div class="form-text">Please Enter Product Description.</div>
										</div>
									</div>
							
									<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12">
										<div class="field-wrapper">
											<select class="form-select" id="pcat" name="category" aria-label="Default select example">
												<option selected>Select The Category</option>

												<%for(let i=0;i<cat.length;i++){%>
												<option value="<%=cat[i].name%>"><%=cat[i].name%></option>
												<%}%>
											</select>
											<div class="field-placeholder">Select an Option<span class="text-danger">*</div>
											<span id="category-error" class="error-message text-danger"></span>
										</div>
									</div>
							
									<div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
										<div class="field-wrapper">
											<input class="form-control" id="pprice" name="priceSmall" type="number">
											<div class="field-placeholder">Regular Price ₹<span class="text-danger">*</div>
											<span id="priceSmall-error" class="error-message text-danger"></span>
											<div class="form-text">Please enter Product Price.</div>
										</div>
									</div>
							
									<div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
										<div class="field-wrapper">
											<input class="form-control" id="ppriceMedium" name="priceMedium" type="number">
											<div class="field-placeholder">Sale Price ₹<span class="text-danger">*</div>
											<span id="priceMedium-error" class="error-message text-danger"></span>
											<div class="form-text">Please enter Product Price.</div>
										</div>
									</div>
							
									<div class="col-xl-2 col-lg-4 col-md-4 col-sm-4 col-12">
										<div class="field-wrapper">
											<input class="form-control" id="ppriceLarge" name="priceLarge" type="number">
											<div class="field-placeholder">Stock (Qnty)<span class="text-danger">*</div>
											<span id="priceLarge-error" class="error-message text-danger"></span>
											<div class="form-text">Please enter Product Stock.</div>
										</div>
									</div>
							
									<h4 class="text-primary my-3">Upload Product Images</h4>
									<div class="d-flex">
										<div class="form-group">
											<label for="image1">Choose an image1<span class="text-danger">*</span></label>
											<input
												type="file"
												class="form-control-file"
												id="input1"
												name="image1"
												accept="image/*"
												onchange="viewImage1(event)" 
											/>
											<img
												id="img-preview1"
												class="img-preview mt-3"
												src="https://via.placeholder.com/200"
												alt="Image Preview" 
											/>
											<span id="image1-error" class="error-message text-danger"></span>
										</div>
							
										<div class="form-group">
											<label for="image2">Choose an image2<span class="text-danger">*</span></label>
											<input
												type="file"
												class="form-control-file"
												id="input2"
												name="image2"
												accept="image/*"
												onchange="viewImage2(event)"
											/>
											<img
												id="img-preview2"
												class="img-preview mt-3"
												src="https://via.placeholder.com/200"
												alt="Image Preview" 
											/>
											<span id="image2-error" class="error-message text-danger"></span>
										</div>
							
										<div class="form-group">
											<label for="image3">Choose an image3<span class="text-danger">*</span></label>
											<input
												type="file"
												class="form-control-file"
												id="input3"
												name="image3"
												accept="image/*"
												onchange="viewImage3(event)"
											/>
											<img
												id="img-preview3"
												class="img-preview mt-3"
												src="https://via.placeholder.com/200"
												alt="Image Preview"
											/>
											<span id="image3-error" class="error-message text-danger"></span>
										</div>
									</div>
							
									<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 mt-3">
										<a href="/admin/product-table">
											<button class="btn btn-light me-3" type="button">Cancel</button>
										</a>
										<button type="submit" class="btn btn-primary">Submit</button>
									</div>
								</div>
							</form>										
						<!-- Row end -->										
						</div>
					</div>
					<!-- Card end -->
				</div>
			</div>
			<!-- Row end -->
		</div>
		<!-- Content wrapper end -->


	<script>			
		// function previewImage1(event) {
		// 	const file = event.target.files[0];
		// 	const reader = new FileReader();

		// 	reader.onload = function() {
		// 		const output = document.getElementById('img-preview1');
		// 		output.src = reader.result;
		// 	};

		// 	if (file) {
		// 		const fileType = file.type;
		// 		const fileSize = file.size;

		// 		const validTypes = ['image/jpeg', 'image/png'];

		// 		if (!validTypes.includes(fileType)) {
		// 			Swal.fire({
		// 				icon: 'error',
		// 				title: 'Invalid Image Format',
		// 				text: 'Only JPG / PNG Format Allowed.'
		// 			});
		// 			event.target.value = ''; // Clear the file input
		// 			return;
		// 		}

		// 		if (fileSize > 5 * 1024 * 1024) { // 5MB limit
		// 			Swal.fire({
		// 				icon: 'error',
		// 				title: 'File is too Large',
		// 				text: 'Maximum size is 5MB.'
		// 			});
		// 			event.target.value = ''; // Clear the file input
		// 			return;
		// 		}

		// 		reader.readAsDataURL(file);
		// 	}
		// }

		// function previewImage2(event) {
		// 	const file = event.target.files[0];
		// 	const reader = new FileReader();

		// 	reader.onload = function() {
		// 		const output = document.getElementById('img-preview2');
		// 		output.src = reader.result;
		// 	};

		// 	if (file) {
		// 		const fileType = file.type;
		// 		const fileSize = file.size;

		// 		const validTypes = ['image/jpeg', 'image/png', 'image/gif'];

		// 		if (!validTypes.includes(fileType)) {
		// 			Swal.fire({
		// 				icon: 'error',
		// 				title: 'Invalid Image Format',
		// 				text: 'Only JPG / PNG Format Allowed.'
		// 			});
		// 			event.target.value = ''; // Clear the file input
		// 			return;
		// 		}

		// 		if (fileSize > 5 * 1024 * 1024) { // 5MB limit
		// 			Swal.fire({
		// 				icon: 'error',
		// 				title: 'File is too Large',
		// 				text: 'Maximum size is 5MB.'
		// 			});
		// 			event.target.value = ''; // Clear the file input
		// 			return;
		// 		}

		// 		reader.readAsDataURL(file);
		// 	}
		// }

		// function previewImage3(event) {
		// 	const file = event.target.files[0];
		// 	const reader = new FileReader();

		// 	reader.onload = function() {
		// 		const output = document.getElementById('img-preview3');
		// 		output.src = reader.result;
		// 	};

		// 	if (file) {
		// 		const fileType = file.type;
		// 		const fileSize = file.size;

		// 		const validTypes = ['image/jpeg', 'image/png', 'image/gif'];

		// 		if (!validTypes.includes(fileType)) {
		// 			Swal.fire({
		// 				icon: 'error',
		// 				title: 'Invalid Image Format',
		// 				text: 'Only JPG / PNG Format Allowed.'
		// 			});
		// 			event.target.value = ''; // Clear the file input
		// 			return;
		// 		}

		// 		if (fileSize > 5 * 1024 * 1024) { // 5MB limit
		// 			Swal.fire({
		// 				icon: 'error',
		// 				title: 'File is too Large',
		// 				text: 'Maximum size is 5MB.'
		// 			});
		// 			event.target.value = ''; // Clear the file input
		// 			return;
		// 		}

		// 		reader.readAsDataURL(file);
		// 	}
		// }

		function viewImage1(event) {
			document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
		}

		function viewImage2(event) {
			document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
		}

		function viewImage3(event) {
			document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
		}


		function viewImage(event,index) {
			let input = event.target;
			let reader = new FileReader();
			reader.onload = function () {
				let dataURL = reader.result;
				let image = document.getElementById('image-preview'+index)
				image.src = dataURL;
				let cropper = new Cropper(image,{
					aspectRatio:1,
					viewMode:1,
					guides:true,
					background:false,
					autoCropArea:1,
					zoomable:true

				})

				let cropperContainer = document.querySelector('#croppedImg'+index).parentNode;
				cropperContainer.style.display ='block';

				let saveButton = document.querySelector('#saveButton',+index);
				saveButton.addEventListener('click',async function () {
					let croppedCanvas = cropper.getCroppedCanvas();
					let croppedImage = document.getElementById('croppedImage',+index);
					croppedImage.src = croppedImage.toDataURL('image/jpeg',1.0);
					let timestamp = new Date().getTime();
					let fileName = `cropped-img-${timestamp}-${index}.png`

					await croppedCanvas.toBlob(blob=>{
						let input = document.getElementById('input'+index);
						let imgFile = new File([blob],fileName,blob);
						const fileList = new DataTransfer();
						input.files = fileList.files
					})

					croppedContainer.style.display = 'none';
					cropper.destroy()
				});
			};

			reader.readAsDataURL(input.files[0]);
		};

		const selectedImages = [];
		document.getElementById('input1').addEventListener('change',handleFileSelect);

		function handleFileSelect(event) {
			const addedImagesContainer = document.getElementById('addedImagesContainer');
			addedImagesContainer.innerHTML = '';
			const files = event.target.files;
			for (let i = 0; i < event.length; i++) {
				const file = files[i];
				selectedImages.push(file);
				const thumbnail = document.createElement("div");
				thumbnail.classList.add('thumbnail');

				const img = document.createElement("img");
				img.src = URL.createObjectURL(file);
				img.alt = 'thumbnail';
				img.style.width='50px';
				img.style.height='auto';
				const removeIcon = document.createElement('span');
				removeIcon.classList.add('remove-icon')
				removeIcon.innerHTML = '&times;';
				removeIcon.addEventListener('click',function () {
					const index = selectedImages.indexOf(file);
					if (index!==-1) {
						selectedImages.splice(index,1)
					}
					thumbnail.remove();
				})

				thumbnail.appendChild(img);
				thumbnail.appendChild(removeIcon);
				addedImagesContainer.appendChild(thumbnail);
				
			}
		}


		function handleForm(event) {
			event.preventDefault();

			if (!validateForm()) {
				return;
			}

			const name = document.getElementById('pname').value.trim();
			const description = document.getElementById('pdesc').value.trim();
			const category = document.getElementById('pcat').value.trim();
			const priceSmall = document.getElementById('pprice').value;
			const priceMedium = document.getElementById('ppriceMedium').value;
			const priceLarge = document.getElementById('ppriceLarge').value;
			const image1 = document.getElementById('image1').files[0];
			const image2 = document.getElementById('image2').files[0];
			const image3 = document.getElementById('image3').files[0];

			const formData = new FormData();
			formData.append('name', name);
			formData.append('description', description);
			formData.append('category', category);
			formData.append('priceSmall', priceSmall);
			formData.append('priceMedium', priceMedium);
			formData.append('priceLarge', priceLarge);
			formData.append('image1', image1);
			formData.append('image2', image2);
			formData.append('image3', image3);

			axios.post('/admin/add-product', formData, {
				headers: {
					'Content-Type': 'multipart/form-data'
				}
			})
			.then(response => {
				Swal.fire({
					icon: 'success',
					title: 'Success',
					text: 'Product added successfully'
				}).then(() => location.reload());
			})
			.catch(error => {
				if (error.response) {
					displayErrorMessages(error.response.data.error);
				} else {
					Swal.fire({
						icon: 'error',
						title: 'Error',
						text: error.message
					});
				}
			});
		}

		function validateForm() {
			clearErrorMessages();
			let isValid = true;

			const name = document.getElementById('pname').value.trim();
			const description = document.getElementById('pdesc').value.trim();
			const category = document.getElementById('pcat').value;
			const priceSmall = document.getElementById('pprice').value.trim();
			const priceMedium = document.getElementById('ppriceMedium').value.trim();
			const priceLarge = document.getElementById('ppriceLarge').value.trim();
			const image1 = document.getElementById('input1').files[0];
			const image2 = document.getElementById('input2').files[0];
			const image3 = document.getElementById('input3').files[0];

			if (name === "") {
				displayErrorMessage('name-error', 'Product name is required');
				isValid = false;
			} else if (name.length < 2) {
				displayErrorMessage('name-error', 'Product name must be at least 2 characters');
				isValid = false;
			}

			if (description === "") {
				displayErrorMessage('desc-error', 'Product description is required');
				isValid = false;
			} else if (description.length < 10) {
				displayErrorMessage('desc-error', 'Description must be at least 10 characters');
				isValid = false;
			}

			if (category === "Select The Category") {
				displayErrorMessage('category-error', 'Please select a category');
				isValid = false;
			}

			if (priceSmall === "") {
				displayErrorMessage('priceSmall-error', 'Regular price is required');
				isValid = false;
			}

			if (priceMedium === "") {
				displayErrorMessage('priceMedium-error', 'Sale price is required');
				isValid = false;
			}

			if (priceLarge === "") {
				displayErrorMessage('priceLarge-error', 'Stock is required');
				isValid = false;
			}

			if (!image1) {
				displayErrorMessage('image1-error', 'Image 1 is required');
				isValid = false;
			}

			if (!image2) {
				displayErrorMessage('image2-error', 'Image 2 is required');
				isValid = false;
			}

			if (!image3) {
				displayErrorMessage('image3-error', 'Image 3 is required');
				isValid = false;
			}

			return isValid;
		}

		function displayErrorMessage(elementId, message) {
			const errorElement = document.getElementById(elementId);
			if (errorElement) {
				errorElement.innerText = message;
				errorElement.style.display = 'block';
			}
		}

		function clearErrorMessages() {
			const errorElements = document.querySelectorAll('.error-message');
			errorElements.forEach(element => {
				element.innerText = "";
				element.style.display = 'none';
			});
		}


	</script>



	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
	<%- include("../../views/partials/admin/footer.ejs") %>
